<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.wyndham</groupId>
	<artifactId>profileLHub</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>profileLHub</name>
	<description>profile Loyalty Hub</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.3.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-hystrix</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- spring-ws -->
		<dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws-support</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws-core</artifactId>
		</dependency>
		<!-- Needed when using local config server -->
		<!-- <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-config</artifactId> 
			</dependency> -->
		<dependency>
			<groupId>io.pivotal.spring.cloud</groupId>
			<artifactId>spring-cloud-services-starter-config-client</artifactId>
			<version>1.3.1.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.6.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.6.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-rsa</artifactId>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Camden.SR5</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jvnet.jaxb2.maven2</groupId>
				<artifactId>maven-jaxb2-plugin</artifactId>
				<version>0.12.1</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<useActiveProxyAsHttpproxy>true</useActiveProxyAsHttpproxy>
					<useActiveProxyAsHttspproxy>true</useActiveProxyAsHttspproxy>
					<extension>true</extension>
					<!-- <forceRegenerate>true</forceRegenerate> --><!-- to regenerate the sources -->
					<bindingDirectory>src/main/resources/enrollment</bindingDirectory>
					<bindingIncludes>
						<include>*.xjb</include>
					</bindingIncludes>
					<schemaLanguage>WSDL</schemaLanguage>
					<outputDirectory>target/generated-sources</outputDirectory>
					<generatePackage>com.wyndham.olson.enrollment.wsdl</generatePackage>
					<wsdl>true</wsdl>
					<xmlschema>false</xmlschema>
					<schemaDirectory>src/main/resources/enrollment</schemaDirectory>
					<schemaFiles>enrollmentService_1.wsdl</schemaFiles>
				</configuration>
			</plugin>
			
		<!-- Surefire plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12.1</version>
				<configuration>
					<argLine>-Xmx1G -XX:MaxPermSize=512m -XX:+UseConcMarkSweepGC
						-XX:+CMSClassUnloadingEnabled ${jacoco.agent.ut.arg}</argLine>
					<excludes>
						<exclude>**/*IntegrationTests*</exclude>
					</excludes>
				</configuration>
			</plugin>
		<!-- Failsafe plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.12.4</version>
				<configuration>
					<argLine>-Xmx1G -XX:MaxPermSize=512m -XX:+UseConcMarkSweepGC
						-XX:+CMSClassUnloadingEnabled ${jacoco.agent.it.arg}</argLine>
					<includes>
						<include>**/*IntegrationTests*</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		<!-- JaCoCo plugin -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<!-- Prepares a variable, jacoco.agent.ut.arg, that contains the info 
						to be passed to the JVM hosting the code being tested. -->
					<execution>
						<id>prepare-ut-agent</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${sonar.jacoco.reportPath}</destFile>
							<propertyName>jacoco.agent.ut.arg</propertyName>
							<append>true</append>
						</configuration>
					</execution>
					<!-- Prepares a variable, jacoco.agent.it.arg, that contains the info 
						to be passed to the JVM hosting the code being tested. -->
					<execution>
						<id>prepare-it-agent</id>
						<!-- moved to package phase to be sure all pre-integration test have 
							it already set to bring up environments with jacoco agent as JVM params -->
						<phase>package</phase>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
						<configuration>
							<destFile>${sonar.jacoco.itReportPath}</destFile>
							<propertyName>jacoco.agent.it.arg</propertyName>
							<append>true</append>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	<!-- sonar properties -->
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>

		<jacoco.version>0.7.6.201602180812</jacoco.version>
		<jacoco.outputDir>${project.build.directory}/jacoco</jacoco.outputDir>
		<jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
		<jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
		<sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>
		<sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>
	</properties>

</project>
