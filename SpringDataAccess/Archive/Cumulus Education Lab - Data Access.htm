<!DOCTYPE html>
<!-- saved from url=(0079)https://cognizant-pal-v1.cfapps.io/spring-boot-developer/data-access/index.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="course version" content="1.5.3">
<meta name="generator" content="io.pivotal.pal.shipkin:shipkin-plugin:1.0.0, https://github.com/platform-acceleration-lab/shipkin">
<meta name="generated on" content="2017-08-07T20:05:55.159Z">




<meta name="viewport" content="width=device-width, initial-scale=1">

<title>Cumulus Education Lab - Data Access</title>

<link rel="icon" href="https://cognizant-pal-v1.cfapps.io/images/cognizant_favicon.ico">

<link rel="stylesheet" href="./Cumulus Education Lab - Data Access_files/components.css">
<link rel="stylesheet" href="./Cumulus Education Lab - Data Access_files/highlight.js.min.css">
<link rel="stylesheet" href="./Cumulus Education Lab - Data Access_files/github.css">
<link rel="stylesheet" href="./Cumulus Education Lab - Data Access_files/custom.css">

<style>
        #header {
            border-color: rgb(49, 178, 93)
        }
        #header.background-image {
            background-color: rgba(53, 122, 145, 0.75);
        }

        footer {
            background-color: #4298b5;
        }

        .label.label-primary {
            background-color: #4298b5;
        }

        a {
            color: #4298b5;
        }

        .label.label-primary:hover, .label.label-primary:focus {
            background-color: #357a91;
        }

        a:hover, a:focus {
            color: #357a91;
        }
</style>

</head>
<body role="document">

<main role="main">

<style>
    #header.background-image:after {
        background-image: url(../../images/boardroom.jpg);
    }
</style>
<header id="header" class="pane background-image">


    <div class="container">
        <div class="row">
                <img src="./Cumulus Education Lab - Data Access_files/cognizant.svg" alt="Cumulus Education Lab logo">

            <div>
                <a href="https://cognizant-pal-v1.cfapps.io/">
                    <h1 class="type-neutral-11 em-max">Cumulus Education Lab</h1>

                    <h2 class="type-neutral-11 em-high">Data Access</h2>
                </a>

            </div>
        </div>
    </div>
</header>

    <div class="container">
        <div class="row">
            <div class="col-sm-18 doc-main">
 <h1 id="requirements">Requirements</h1>
<p><a href="https://cognizant-pal-v1.cfapps.io/spring-boot-developer/requirements">Lab Requirements</a></p>
<h1 id="purpose-of-this-lab">Purpose of this lab</h1>
<ul>
<li>Get familiar with Spring Boot, JDBC and in-memory data persistence</li>
<li>Demonstrate how easy it is to switch from an in-memory database to a MySQL database</li>
<li>Estimated time: 30 minutes</li>
</ul>
<h1 id="jdbc-in-memory-data-project">JDBC in-memory data project</h1>
<ol>
<li>
<p>Create a project with the following attributes using
<a href="https://cognizant-pal-v1.cfapps.io/spring-boot-developer/spring-vs-spring-boot#using-intellij">these directions</a>.</p>
<ul>
<li><strong>Group</strong>: <code>io.pivotal.workshop</code></li>
<li><strong>ArtifactId</strong>: <code>code-snippet-manager-jdbc</code></li>
<li><strong>Dependencies</strong>: <code>web, jdbc, h2, devtools</code></li>
</ul>
</li>
<li>
<p>Create a <code>SnippetRecord</code> class in the <code>io.pivotal.workshop</code> package.</p>
<pre class=" language-java"><code class="language-java hljs"><span class="token keyword"><span class="hljs-keyword">package</span></span> io<span class="token punctuation">.</span>pivotal<span class="token punctuation">.</span>workshop<span class="token punctuation">;</span>

<span class="token keyword"><span class="hljs-keyword">import</span></span> java<span class="token punctuation">.</span>time<span class="token punctuation">.</span>LocalDate<span class="token punctuation">;</span>

<span class="token keyword"><span class="hljs-keyword">public</span></span> <span class="token keyword"><span class="hljs-class"><span class="hljs-keyword">class</span></span></span><span class="hljs-class"> </span><span class="token class-name"><span class="hljs-class"><span class="hljs-title">SnippetRecord</span></span></span><span class="hljs-class"> </span><span class="token punctuation">{</span>

    <span class="token keyword"><span class="hljs-keyword">public</span></span> <span class="token keyword"><span class="hljs-keyword">final</span></span> String id<span class="token punctuation">;</span>
    <span class="token keyword"><span class="hljs-keyword">public</span></span> <span class="token keyword"><span class="hljs-keyword">final</span></span> String title<span class="token punctuation">;</span>
    <span class="token keyword"><span class="hljs-keyword">public</span></span> <span class="token keyword"><span class="hljs-keyword">final</span></span> String code<span class="token punctuation">;</span>
    <span class="token keyword"><span class="hljs-keyword">public</span></span> <span class="token keyword"><span class="hljs-keyword">final</span></span> LocalDate created<span class="token punctuation">;</span>
    <span class="token keyword"><span class="hljs-keyword">public</span></span> <span class="token keyword"><span class="hljs-keyword">final</span></span> LocalDate modified<span class="token punctuation">;</span>

    <span class="token keyword"><span class="hljs-function"><span class="hljs-keyword">public</span></span></span><span class="hljs-function"> </span><span class="token function"><span class="hljs-function"><span class="hljs-title">SnippetRecord</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">(</span></span></span></span><span class="hljs-function"><span class="hljs-params">String id</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">,</span></span></span><span class="hljs-function"><span class="hljs-params"> String title</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">,</span></span></span><span class="hljs-function"><span class="hljs-params"> String code</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">,</span></span></span><span class="hljs-function"><span class="hljs-params"> LocalDate created</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">,</span></span></span><span class="hljs-function"><span class="hljs-params"> LocalDate modified</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">)</span></span></span><span class="hljs-function"> </span><span class="token punctuation">{</span>
        <span class="token keyword"><span class="hljs-keyword">this</span></span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
        <span class="token keyword"><span class="hljs-keyword">this</span></span><span class="token punctuation">.</span>title <span class="token operator">=</span> title<span class="token punctuation">;</span>
        <span class="token keyword"><span class="hljs-keyword">this</span></span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>
        <span class="token keyword"><span class="hljs-keyword">this</span></span><span class="token punctuation">.</span>created <span class="token operator">=</span> created<span class="token punctuation">;</span>
        <span class="token keyword"><span class="hljs-keyword">this</span></span><span class="token punctuation">.</span>modified <span class="token operator">=</span> modified<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
</li>
<li>
<p>Create a <code>NewSnippetFields</code> class in the <code>io.pivotal.workshop</code> package.
This class will be used to encapsulate the title and code fields on snippet creation.</p>
<pre class=" language-java"><code class="language-java hljs"><span class="token keyword"><span class="hljs-keyword">package</span></span> io<span class="token punctuation">.</span>pivotal<span class="token punctuation">.</span>workshop<span class="token punctuation">;</span>

<span class="token keyword"><span class="hljs-keyword">public</span></span> <span class="token keyword"><span class="hljs-class"><span class="hljs-keyword">class</span></span></span><span class="hljs-class"> </span><span class="token class-name"><span class="hljs-class"><span class="hljs-title">NewSnippetFields</span></span></span><span class="hljs-class"> </span><span class="token punctuation">{</span>

    <span class="token keyword"><span class="hljs-keyword">public</span></span> <span class="token keyword"><span class="hljs-keyword">final</span></span> String title<span class="token punctuation">;</span>
    <span class="token keyword"><span class="hljs-keyword">public</span></span> <span class="token keyword"><span class="hljs-keyword">final</span></span> String code<span class="token punctuation">;</span>

    <span class="token keyword"><span class="hljs-function"><span class="hljs-keyword">public</span></span></span><span class="hljs-function"> </span><span class="token function"><span class="hljs-function"><span class="hljs-title">NewSnippetFields</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">(</span></span></span></span><span class="hljs-function"><span class="hljs-params">String title</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">,</span></span></span><span class="hljs-function"><span class="hljs-params"> String code</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">)</span></span></span><span class="hljs-function"> </span><span class="token punctuation">{</span>
        <span class="token keyword"><span class="hljs-keyword">this</span></span><span class="token punctuation">.</span>title <span class="token operator">=</span> title<span class="token punctuation">;</span>
        <span class="token keyword"><span class="hljs-keyword">this</span></span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true"><span class="hljs-comment">// Make jackson happy when parsing JSON into this class</span></span>
    <span class="token keyword"><span class="hljs-function"><span class="hljs-keyword">private</span></span></span><span class="hljs-function"> </span><span class="token function"><span class="hljs-function"><span class="hljs-title">NewSnippetFields</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">(</span></span></span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">)</span></span></span><span class="hljs-function"> </span><span class="token punctuation">{</span>
        <span class="token keyword"><span class="hljs-keyword">this</span></span><span class="token punctuation">(</span><span class="hljs-keyword">null</span><span class="token punctuation">,</span> <span class="hljs-keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
</li>
<li>
<p>Create a <code>SnippetInfo</code> class in the <code>io.pivotal.workshop</code> package.
This class will be used to generate the JSON produced by our controller.</p>
<pre class=" language-java"><code class="language-java hljs"><span class="token keyword"><span class="hljs-keyword">package</span></span> io<span class="token punctuation">.</span>pivotal<span class="token punctuation">.</span>workshop<span class="token punctuation">;</span>

<span class="token keyword"><span class="hljs-keyword">public</span></span> <span class="token keyword"><span class="hljs-class"><span class="hljs-keyword">class</span></span></span><span class="hljs-class"> </span><span class="token class-name"><span class="hljs-class"><span class="hljs-title">SnippetInfo</span></span></span><span class="hljs-class"> </span><span class="token punctuation">{</span>

    <span class="token keyword"><span class="hljs-keyword">public</span></span> <span class="token keyword"><span class="hljs-keyword">final</span></span> String id<span class="token punctuation">;</span>
    <span class="token keyword"><span class="hljs-keyword">public</span></span> <span class="token keyword"><span class="hljs-keyword">final</span></span> String title<span class="token punctuation">;</span>
    <span class="token keyword"><span class="hljs-keyword">public</span></span> <span class="token keyword"><span class="hljs-keyword">final</span></span> String code<span class="token punctuation">;</span>
    <span class="token keyword"><span class="hljs-keyword">public</span></span> <span class="token keyword"><span class="hljs-keyword">final</span></span> String created<span class="token punctuation">;</span>
    <span class="token keyword"><span class="hljs-keyword">public</span></span> <span class="token keyword"><span class="hljs-keyword">final</span></span> String modified<span class="token punctuation">;</span>

    <span class="token keyword"><span class="hljs-function"><span class="hljs-keyword">public</span></span></span><span class="hljs-function"> </span><span class="token function"><span class="hljs-function"><span class="hljs-title">SnippetInfo</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">(</span></span></span></span><span class="hljs-function"><span class="hljs-params">String id</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">,</span></span></span><span class="hljs-function"><span class="hljs-params"> String title</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">,</span></span></span><span class="hljs-function"><span class="hljs-params"> String code</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">,</span></span></span><span class="hljs-function"><span class="hljs-params"> String created</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">,</span></span></span><span class="hljs-function"><span class="hljs-params"> String modified</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">)</span></span></span><span class="hljs-function"> </span><span class="token punctuation">{</span>
        <span class="token keyword"><span class="hljs-keyword">this</span></span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
        <span class="token keyword"><span class="hljs-keyword">this</span></span><span class="token punctuation">.</span>title <span class="token operator">=</span> title<span class="token punctuation">;</span>
        <span class="token keyword"><span class="hljs-keyword">this</span></span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>
        <span class="token keyword"><span class="hljs-keyword">this</span></span><span class="token punctuation">.</span>created <span class="token operator">=</span> created<span class="token punctuation">;</span>
        <span class="token keyword"><span class="hljs-keyword">this</span></span><span class="token punctuation">.</span>modified <span class="token operator">=</span> modified<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
</li>
<li>
<p>Create a <code>SnippetPresenter</code> class in the <code>io.pivotal.workshop</code> package.
The responsibility of this class is to convert our <code>SnippetRecord</code> to a <code>SnippetInfo</code>.</p>
<pre class=" language-java"><code class="language-java hljs"><span class="token keyword"><span class="hljs-keyword">package</span></span> io<span class="token punctuation">.</span>pivotal<span class="token punctuation">.</span>workshop<span class="token punctuation">;</span>

<span class="token keyword"><span class="hljs-keyword">import</span></span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span>

<span class="token keyword"><span class="hljs-keyword">import</span></span> java<span class="token punctuation">.</span>time<span class="token punctuation">.</span>format<span class="token punctuation">.</span>DateTimeFormatter<span class="token punctuation">;</span>

<span class="hljs-meta">@Component</span>
<span class="token keyword"><span class="hljs-keyword">public</span></span> <span class="token keyword"><span class="hljs-class"><span class="hljs-keyword">class</span></span></span><span class="hljs-class"> </span><span class="token class-name"><span class="hljs-class"><span class="hljs-title">SnippetPresenter</span></span></span><span class="hljs-class"> </span><span class="token punctuation">{</span>

    DateTimeFormatter formatter <span class="token operator">=</span> DateTimeFormatter<span class="token punctuation">.</span>ISO_DATE<span class="token punctuation">;</span>

    <span class="token keyword"><span class="hljs-function"><span class="hljs-keyword">public</span></span></span><span class="hljs-function"> SnippetInfo </span><span class="token function"><span class="hljs-function"><span class="hljs-title">present</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">(</span></span></span></span><span class="hljs-function"><span class="hljs-params">SnippetRecord record</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">)</span></span></span><span class="hljs-function"> </span><span class="token punctuation">{</span>
        <span class="token keyword"><span class="hljs-keyword">return</span></span> <span class="token keyword"><span class="hljs-keyword">new</span></span> <span class="token class-name">SnippetInfo</span><span class="token punctuation">(</span>
            record<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
            record<span class="token punctuation">.</span>title<span class="token punctuation">,</span>
            record<span class="token punctuation">.</span>code<span class="token punctuation">,</span>
            record<span class="token punctuation">.</span>created<span class="token punctuation">.</span><span class="token function">format<span class="token punctuation">(</span></span>formatter<span class="token punctuation">)</span><span class="token punctuation">,</span>
            record<span class="token punctuation">.</span>modified<span class="token punctuation">.</span><span class="token function">format<span class="token punctuation">(</span></span>formatter<span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
</li>
<li>
<p>Create a <code>SnippetRepository</code> class in the <code>io.pivotal.workshop</code> package
that is constructed with a <code>JdbcTemplate</code>.
This class will save a snippet, find a snippet, and list all snippets.</p>
<pre class=" language-java"><code class="language-java hljs"><span class="token keyword"><span class="hljs-keyword">package</span></span> io<span class="token punctuation">.</span>pivotal<span class="token punctuation">.</span>workshop<span class="token punctuation">;</span>

<span class="token keyword"><span class="hljs-keyword">import</span></span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>JdbcTemplate<span class="token punctuation">;</span>
<span class="token keyword"><span class="hljs-keyword">import</span></span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RowMapper<span class="token punctuation">;</span>
<span class="token keyword"><span class="hljs-keyword">import</span></span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Repository<span class="token punctuation">;</span>

<span class="token keyword"><span class="hljs-keyword">import</span></span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>*<span class="token punctuation">;</span>
<span class="token keyword"><span class="hljs-keyword">import</span></span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span>

<span class="token keyword"><span class="hljs-keyword">import</span></span> <span class="token keyword"><span class="hljs-keyword">static</span></span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>UUID<span class="token punctuation">.</span>randomUUID<span class="token punctuation">;</span>

<span class="hljs-meta">@Repository</span>
<span class="token keyword"><span class="hljs-keyword">public</span></span> <span class="token keyword"><span class="hljs-class"><span class="hljs-keyword">class</span></span></span><span class="hljs-class"> </span><span class="token class-name"><span class="hljs-class"><span class="hljs-title">SnippetRepository</span></span></span><span class="hljs-class"> </span><span class="token punctuation">{</span>

    <span class="token keyword"><span class="hljs-keyword">private</span></span> <span class="token keyword"><span class="hljs-keyword">final</span></span> JdbcTemplate jdbcTemplate<span class="token punctuation">;</span>
    <span class="token keyword"><span class="hljs-keyword">private</span></span> <span class="token keyword"><span class="hljs-keyword">final</span></span> RowMapper<span class="token operator">&lt;</span>SnippetRecord<span class="token operator">&gt;</span> rowMapper <span class="token operator">=</span> <span class="token punctuation">(</span>ResultSet rs<span class="token punctuation">,</span> <span class="token keyword"><span class="hljs-keyword">int</span></span> row<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token keyword"><span class="hljs-keyword">new</span></span> <span class="token class-name">SnippetRecord</span><span class="token punctuation">(</span>
        rs<span class="token punctuation">.</span><span class="token function">getString<span class="token punctuation">(</span></span><span class="token string"><span class="hljs-string">"id"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        rs<span class="token punctuation">.</span><span class="token function">getString<span class="token punctuation">(</span></span><span class="token string"><span class="hljs-string">"title"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        rs<span class="token punctuation">.</span><span class="token function">getString<span class="token punctuation">(</span></span><span class="token string"><span class="hljs-string">"code"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        rs<span class="token punctuation">.</span><span class="token function">getDate<span class="token punctuation">(</span></span><span class="token string"><span class="hljs-string">"created"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocalDate<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        rs<span class="token punctuation">.</span><span class="token function">getDate<span class="token punctuation">(</span></span><span class="token string"><span class="hljs-string">"modified"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocalDate<span class="token punctuation">(</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword"><span class="hljs-function"><span class="hljs-keyword">public</span></span></span><span class="hljs-function"> </span><span class="token function"><span class="hljs-function"><span class="hljs-title">SnippetRepository</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">(</span></span></span></span><span class="hljs-function"><span class="hljs-params">JdbcTemplate jdbcTemplate</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">)</span></span></span><span class="hljs-function"> </span><span class="token punctuation">{</span>
        <span class="token keyword"><span class="hljs-keyword">this</span></span><span class="token punctuation">.</span>jdbcTemplate <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword"><span class="hljs-keyword">private</span></span> <span class="token keyword"><span class="hljs-keyword">final</span></span> String SQL_INSERT <span class="token operator">=</span> <span class="token string"><span class="hljs-string">"insert into snippet (id, title, code, created, modified)"</span></span> <span class="token operator">+</span>
        <span class="token string"><span class="hljs-string">" values(?, ?, ?, now(), now())"</span></span><span class="token punctuation">;</span>

    <span class="token keyword"><span class="hljs-function"><span class="hljs-keyword">public</span></span></span><span class="hljs-function"> SnippetRecord </span><span class="token function"><span class="hljs-function"><span class="hljs-title">save</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">(</span></span></span></span><span class="hljs-function"><span class="hljs-params">NewSnippetFields newSnippetFields</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">)</span></span></span><span class="hljs-function"> </span><span class="token punctuation">{</span>
        String newId <span class="token operator">=</span> <span class="token function">randomUUID<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        jdbcTemplate<span class="token punctuation">.</span><span class="token function">update<span class="token punctuation">(</span></span>SQL_INSERT<span class="token punctuation">,</span> newId<span class="token punctuation">,</span> newSnippetFields<span class="token punctuation">.</span>title<span class="token punctuation">,</span> newSnippetFields<span class="token punctuation">.</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword"><span class="hljs-keyword">return</span></span> <span class="token function">findOne<span class="token punctuation">(</span></span>newId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword"><span class="hljs-keyword">private</span></span> <span class="token keyword"><span class="hljs-keyword">final</span></span> String SQL_QUERY_ALL <span class="token operator">=</span> <span class="token string"><span class="hljs-string">"select * from snippet"</span></span><span class="token punctuation">;</span>

    <span class="token keyword"><span class="hljs-function"><span class="hljs-keyword">public</span></span></span><span class="hljs-function"> List</span><span class="token operator"><span class="hljs-function">&lt;</span></span><span class="hljs-function">SnippetRecord</span><span class="token operator"><span class="hljs-function">&gt;</span></span><span class="hljs-function"> </span><span class="token function"><span class="hljs-function"><span class="hljs-title">findAll</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">(</span></span></span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">)</span></span></span><span class="hljs-function"> </span><span class="token punctuation">{</span>
        <span class="token keyword"><span class="hljs-keyword">return</span></span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">query<span class="token punctuation">(</span></span>SQL_QUERY_ALL<span class="token punctuation">,</span> rowMapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword"><span class="hljs-keyword">private</span></span> <span class="token keyword"><span class="hljs-keyword">final</span></span> String SQL_QUERY_BY_ID <span class="token operator">=</span> <span class="token string"><span class="hljs-string">"select * from snippet where id = ?"</span></span><span class="token punctuation">;</span>

    <span class="token keyword"><span class="hljs-function"><span class="hljs-keyword">public</span></span></span><span class="hljs-function"> SnippetRecord </span><span class="token function"><span class="hljs-function"><span class="hljs-title">findOne</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">(</span></span></span></span><span class="hljs-function"><span class="hljs-params">String id</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">)</span></span></span><span class="hljs-function"> </span><span class="token punctuation">{</span>
        <span class="token keyword"><span class="hljs-keyword">return</span></span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">queryForObject<span class="token punctuation">(</span></span>SQL_QUERY_BY_ID<span class="token punctuation">,</span> <span class="token keyword"><span class="hljs-keyword">new</span></span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>id<span class="token punctuation">}</span><span class="token punctuation">,</span> rowMapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
</li>
<li>
<p>Spring Data can initialize your database at start up by reading
specially named files in the <code>src/main/resources</code> directory.
Create the following files:</p>
<ul>
<li>
<p><code>src/main/resources/schema.sql</code></p>
<pre><code class="language-sql hljs"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">EXISTS</span> snippet;

<span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> snippet
(
    <span class="hljs-keyword">id</span> <span class="hljs-built_in">varchar</span>(<span class="hljs-number">36</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-literal">NULL</span>,
    title <span class="hljs-built_in">varchar</span>(<span class="hljs-number">200</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-literal">NULL</span>,
    code <span class="hljs-built_in">varchar</span>(<span class="hljs-number">500</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-literal">NULL</span>,
    created <span class="hljs-built_in">date</span> <span class="hljs-keyword">NOT</span> <span class="hljs-literal">NULL</span>,
    modified <span class="hljs-built_in">date</span> <span class="hljs-keyword">NOT</span> <span class="hljs-literal">NULL</span>,
    PRIMARY <span class="hljs-keyword">KEY</span> (<span class="hljs-keyword">id</span>)
);
</code></pre>
</li>
<li>
<p><code>src/main/resources/data.sql</code></p>
<pre><code class="language-sql hljs"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> snippet (<span class="hljs-keyword">id</span>, title, code, created, modified) <span class="hljs-keyword">values</span> (<span class="hljs-string">'66921076-ed1d-458b-9d7d-ce9a227d64a5'</span>, <span class="hljs-string">'JavaScript: Hello World'</span>, <span class="hljs-string">'console.log("Hello World!");'</span>, <span class="hljs-string">'2016-07-31'</span>, <span class="hljs-string">'2016-07-31'</span>);
<span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> snippet (<span class="hljs-keyword">id</span>, title, code, created, modified) <span class="hljs-keyword">values</span> (<span class="hljs-string">'4465afe0-4e8f-4779-90e3-e6b971c4cc7d'</span>, <span class="hljs-string">'HTML: Hello World'</span>, <span class="hljs-string">'&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello World&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;'</span>, <span class="hljs-string">'2016-07-31'</span>, <span class="hljs-string">'2016-07-31'</span>);
<span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> snippet (<span class="hljs-keyword">id</span>, title, code, created, modified) <span class="hljs-keyword">values</span> (<span class="hljs-string">'842c4bd0-32a0-4c6e-8f7a-74c45c23ddf1'</span>, <span class="hljs-string">'Bash: Hello World'</span>, <span class="hljs-string">'echo "Hello World"'</span>, <span class="hljs-string">'2016-07-31'</span>, <span class="hljs-string">'2016-07-31'</span>);
<span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> snippet (<span class="hljs-keyword">id</span>, title, code, created, modified) <span class="hljs-keyword">values</span> (<span class="hljs-string">'7d1bce20-799b-49b0-8306-6f558aac4dd9'</span>, <span class="hljs-string">'Python: Hello World'</span>, <span class="hljs-string">'print "Hello World"'</span>, <span class="hljs-string">'2016-07-31'</span>, <span class="hljs-string">'2016-07-31'</span>);
</code></pre>
</li>
</ul>
</li>
<li>
<p>Create a <code>SnippetController</code> class in the <code>io.pivotal.workshop</code> package.</p>
<pre class=" language-java"><code class="language-java hljs"><span class="token keyword"><span class="hljs-keyword">package</span></span> io<span class="token punctuation">.</span>pivotal<span class="token punctuation">.</span>workshop<span class="token punctuation">;</span>

<span class="token keyword"><span class="hljs-keyword">import</span></span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>*<span class="token punctuation">;</span>
<span class="token keyword"><span class="hljs-keyword">import</span></span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>*<span class="token punctuation">;</span>
<span class="token keyword"><span class="hljs-keyword">import</span></span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ServletUriComponentsBuilder<span class="token punctuation">;</span>

<span class="token keyword"><span class="hljs-keyword">import</span></span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>URI<span class="token punctuation">;</span>
<span class="token keyword"><span class="hljs-keyword">import</span></span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span>

<span class="token keyword"><span class="hljs-keyword">import</span></span> <span class="token keyword"><span class="hljs-keyword">static</span></span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>Collectors<span class="token punctuation">.</span>toList<span class="token punctuation">;</span>

<span class="hljs-meta">@RestController</span>
<span class="hljs-meta">@</span><span class="token function"><span class="hljs-meta">RequestMapping</span><span class="token punctuation">(</span></span><span class="token string"><span class="hljs-string">"/snippets"</span></span><span class="token punctuation">)</span>
<span class="token keyword"><span class="hljs-keyword">public</span></span> <span class="token keyword"><span class="hljs-class"><span class="hljs-keyword">class</span></span></span><span class="hljs-class"> </span><span class="token class-name"><span class="hljs-class"><span class="hljs-title">SnippetController</span></span></span><span class="hljs-class"> </span><span class="token punctuation">{</span>

    <span class="token keyword"><span class="hljs-keyword">private</span></span> <span class="token keyword"><span class="hljs-keyword">final</span></span> SnippetRepository snippetRepository<span class="token punctuation">;</span>
    <span class="token keyword"><span class="hljs-keyword">private</span></span> <span class="token keyword"><span class="hljs-keyword">final</span></span> SnippetPresenter snippetPresenter<span class="token punctuation">;</span>

    <span class="token keyword"><span class="hljs-function"><span class="hljs-keyword">public</span></span></span><span class="hljs-function"> </span><span class="token function"><span class="hljs-function"><span class="hljs-title">SnippetController</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">(</span></span></span></span><span class="hljs-function"><span class="hljs-params">SnippetRepository snippetRepository</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">,</span></span></span><span class="hljs-function"><span class="hljs-params"> SnippetPresenter snippetPresenter</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">)</span></span></span><span class="hljs-function"> </span><span class="token punctuation">{</span>
        <span class="token keyword"><span class="hljs-keyword">this</span></span><span class="token punctuation">.</span>snippetRepository <span class="token operator">=</span> snippetRepository<span class="token punctuation">;</span>
        <span class="token keyword"><span class="hljs-keyword">this</span></span><span class="token punctuation">.</span>snippetPresenter <span class="token operator">=</span> snippetPresenter<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="hljs-meta">@GetMapping</span>
    <span class="token keyword"><span class="hljs-function"><span class="hljs-keyword">public</span></span></span><span class="hljs-function"> List</span><span class="token operator"><span class="hljs-function">&lt;</span></span><span class="hljs-function">SnippetInfo</span><span class="token operator"><span class="hljs-function">&gt;</span></span><span class="hljs-function"> </span><span class="token function"><span class="hljs-function"><span class="hljs-title">snippets</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">(</span></span></span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">)</span></span></span><span class="hljs-function"> </span><span class="token punctuation">{</span>
        <span class="token keyword"><span class="hljs-keyword">return</span></span> snippetRepository<span class="token punctuation">.</span><span class="token function">findAll<span class="token punctuation">(</span></span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">stream<span class="token punctuation">(</span></span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">map<span class="token punctuation">(</span></span>snippetPresenter<span class="token operator">:</span><span class="token operator">:</span>present<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">collect<span class="token punctuation">(</span></span><span class="token function">toList<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="hljs-meta">@</span><span class="token function"><span class="hljs-meta">GetMapping</span><span class="token punctuation">(</span></span><span class="token string"><span class="hljs-string">"/{id}"</span></span><span class="token punctuation">)</span>
    <span class="token keyword"><span class="hljs-function"><span class="hljs-keyword">public</span></span></span><span class="hljs-function"> SnippetInfo </span><span class="token function"><span class="hljs-function"><span class="hljs-title">snippet</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">(</span></span></span></span><span class="hljs-function"><span class="hljs-params">@</span></span><span class="token function"><span class="hljs-function"><span class="hljs-params">PathVariable</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">(</span></span></span></span><span class="token string"><span class="hljs-function"><span class="hljs-params"><span class="hljs-string">"id"</span></span></span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">)</span></span></span><span class="hljs-function"> String id</span><span class="token punctuation"><span class="hljs-function">)</span></span><span class="hljs-function"> </span><span class="token punctuation">{</span>
        SnippetRecord record <span class="token operator">=</span> snippetRepository<span class="token punctuation">.</span><span class="token function">findOne<span class="token punctuation">(</span></span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword"><span class="hljs-keyword">return</span></span> snippetPresenter<span class="token punctuation">.</span><span class="token function">present<span class="token punctuation">(</span></span>record<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="hljs-meta">@PostMapping</span>
    <span class="token keyword"><span class="hljs-function"><span class="hljs-keyword">public</span></span></span><span class="hljs-function"> ResponseEntity</span><span class="token operator"><span class="hljs-function">&lt;</span></span><span class="hljs-function">SnippetInfo</span><span class="token operator"><span class="hljs-function">&gt;</span></span><span class="hljs-function"> </span><span class="token function"><span class="hljs-function"><span class="hljs-title">add</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">(</span></span></span></span><span class="hljs-function"><span class="hljs-params">@RequestBody NewSnippetFields newSnippetFields</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">)</span></span></span><span class="hljs-function"> </span><span class="token punctuation">{</span>
        SnippetRecord savedSnippetRecord <span class="token operator">=</span> snippetRepository<span class="token punctuation">.</span><span class="token function">save<span class="token punctuation">(</span></span>newSnippetFields<span class="token punctuation">)</span><span class="token punctuation">;</span>
        SnippetInfo savedSnippetInfo <span class="token operator">=</span> snippetPresenter<span class="token punctuation">.</span><span class="token function">present<span class="token punctuation">(</span></span>savedSnippetRecord<span class="token punctuation">)</span><span class="token punctuation">;</span>

        HttpHeaders httpHeaders <span class="token operator">=</span> <span class="token keyword"><span class="hljs-keyword">new</span></span> <span class="token class-name">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        httpHeaders<span class="token punctuation">.</span><span class="token function">setLocation<span class="token punctuation">(</span></span><span class="token function">buildSnippetUri<span class="token punctuation">(</span></span>savedSnippetInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword"><span class="hljs-keyword">return</span></span> <span class="token keyword"><span class="hljs-keyword">new</span></span> <span class="token class-name">ResponseEntity</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>savedSnippetInfo<span class="token punctuation">,</span> httpHeaders<span class="token punctuation">,</span> HttpStatus<span class="token punctuation">.</span>CREATED<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword"><span class="hljs-function"><span class="hljs-keyword">private</span></span></span><span class="hljs-function"> URI </span><span class="token function"><span class="hljs-function"><span class="hljs-title">buildSnippetUri</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">(</span></span></span></span><span class="hljs-function"><span class="hljs-params">SnippetInfo snippet</span></span><span class="token punctuation"><span class="hljs-function"><span class="hljs-params">)</span></span></span><span class="hljs-function"> </span><span class="token punctuation">{</span>
        <span class="token keyword"><span class="hljs-keyword">return</span></span> ServletUriComponentsBuilder
            <span class="token punctuation">.</span><span class="token function">fromCurrentRequest<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">path<span class="token punctuation">(</span></span><span class="token string"><span class="hljs-string">"/"</span></span> <span class="token operator">+</span> snippet<span class="token punctuation">.</span>id<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">buildAndExpand<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUri<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
</li>
<li>
<p>Run the application.</p>
</li>
<li>
<p>The H2 library comes with an embedded SQL browser that you can access
at <a href="http://localhost:8080/h2-console">localhost:8080/h2-console</a>.
The default database name is <em>testdb</em> and the complete JDBC URL is
<code>jdbc:h2:mem:testdb</code>
Try running a query through the web UI.</p>
</li>
<li>
<p>Open a terminal window and run the following command:</p>
<pre class=" language-bash"><code class="language-bash hljs">curl <span class="token operator"><span class="hljs-_">-</span></span><span class="hljs-_">s</span> localhost<span class="token punctuation">:</span><span class="token number">8080</span><span class="token operator">/</span>snippets
</code></pre>
</li>
<li>
<p>Use <code>curl</code> to add a new snippet code and review the results in the
<a href="http://localhost:8080/h2-console">h2-console</a> and via the <code>/snippets</code>
endpoint.</p>
</li>
</ol>
<h1 id="jdbc-mysql-project">JDBC MySQL project</h1>
<ol>
<li>
<p>You will start this section with the code from the previous section.</p>
</li>
<li>
<p>Add a mysql user and create a database:</p>
<pre class=" language-bash"><code class="language-bash hljs">mysql <span class="token operator">-</span>uroot
</code></pre>
<pre class=" language-bash"><code class="language-bash hljs">create user <span class="token string"><span class="hljs-string">'springboot'</span></span>@<span class="token string"><span class="hljs-string">'localhost'</span></span> identified by <span class="token string"><span class="hljs-string">'workshop'</span></span><span class="token punctuation">;</span>
create database testdb<span class="token punctuation">;</span>
grant all privileges on testdb<span class="token punctuation">.</span><span class="token operator">*</span> to <span class="token string"><span class="hljs-string">'springboot'</span></span>@<span class="token string"><span class="hljs-string">'localhost'</span></span><span class="token punctuation">;</span>
</code></pre>
</li>
<li>
<p>Open your <code>build.gradle</code> file and replace the <em>h2</em> dependency with a
<code>mysql</code> dependency.</p>
<pre><code class="hljs clean">runtime(<span class="hljs-string">'mysql:mysql-connector-java'</span>)
</code></pre>
</li>
<li>
<p>Configure your datasource to use MySQL in
<code>src/main/resources/application.properties</code>:</p>
<pre><code class="language-properties">spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/testdb?useSSL=false
spring.datasource.username=springboot
spring.datasource.password=workshop
</code></pre>
</li>
<li>
<p>Run the application.</p>
</li>
<li>
<p>Open another terminal window and run the following command:
<code>curl -s localhost:8080/snippets</code></p>
</li>
<li>
<p>Using <code>curl</code> add a new snippet and review the results in
the <code>/snippets</code> endpoint and through the <code>mysql</code> commandline client.</p>
</li>
</ol>
<h1 id="challenges">Challenges</h1>
<ol>
<li>Modify the <code>SnippetRepository</code> class by adding a function that allows searching between
snippet creation Dates.
Create a custom SQL query and modify the <code>SnippetController</code> to support this feature.</li>
</ol>
             </div>
            <div class="col-sm-6">
<nav id="sidebar" class="panel panel-basic-alt hidden-xs top">
    <div class="panel-header panel-title-alt">
        <a href="https://cognizant-pal-v1.cfapps.io/index.html">Return to Cumulus Education Lab</a>
    </div>
    <div class="panel-body">
        <a href="https://cognizant-pal-v1.cfapps.io/spring-boot-developer/data-access/index.html#">Back to top</a>

<ul>
        <li>
        <a href="https://cognizant-pal-v1.cfapps.io/spring-boot-developer/data-access/index.html#requirements">Requirements</a>

        </li>
        <li>
        <a href="https://cognizant-pal-v1.cfapps.io/spring-boot-developer/data-access/index.html#purpose-of-this-lab">Purpose of this lab</a>

        </li>
        <li>
        <a href="https://cognizant-pal-v1.cfapps.io/spring-boot-developer/data-access/index.html#jdbc-in-memory-data-project">JDBC in-memory data project</a>

        </li>
        <li>
        <a href="https://cognizant-pal-v1.cfapps.io/spring-boot-developer/data-access/index.html#jdbc-mysql-project">JDBC MySQL project</a>

        </li>
        <li>
        <a href="https://cognizant-pal-v1.cfapps.io/spring-boot-developer/data-access/index.html#challenges">Challenges</a>

        </li>
</ul>
    </div>
</nav>
            </div>
        </div>
    </div>
</main>

<footer>
    <a href="https://pivotal.io/" class="type-neutral-11">CONFIDENTIAL - © Copyright 2017 Pivotal Software, Inc. All Rights Reserved.</a>
    <div class="type-neutral-6">course version: 1.5.3</div>
</footer>


<script src="./Cumulus Education Lab - Data Access_files/highlight.pack.js"></script>
<script>hljs.initHighlightingOnLoad();</script>
<script src="./Cumulus Education Lab - Data Access_files/ie10-viewport-bug-workaround.js"></script>
<script src="./Cumulus Education Lab - Data Access_files/jquery-3.1.1.min.js"></script>
<script src="./Cumulus Education Lab - Data Access_files/pivotal-ui.min.js"></script>
<script src="./Cumulus Education Lab - Data Access_files/custom.js"></script>





</body></html>